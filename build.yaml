---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
Path: ./Sampler/Sampler.psd1
# Output Directory where ModuleBuilder will build the Module
OutputDirectory: ./output/Sampler
CopyDirectories:
  - DscResources
  #- HelperSubmodule # This will be built to target instead
  - ../.build/tasks
  - en
  - assets
  - PlasterTemplate

# Suffix to add to Root module PSM1 after merge (here, the Set-Alias)
suffix: suffix.ps1
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
  HelperSubmodule: # This is the first submodule to build into the output
    Path: ./Sampler/HelperSubmodule/HelperSubmodule.psd1
    # $ModuleVersion is trimmed (remove -.*) and OutputDirectory expanded (the only one)
    OutputDirectory: ./output/Sampler/$ModuleVersion/HelperSubmodule
    VersionedOutputDirectory: false
    # suffix:
    # prefix:



####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvkeBuild tasks) to be run using their alias
BuildWorkflow:
  CopyPlaster: |
    {
      # Create a Build task from the Yaml (Because we dont want this task to be in the .build folder)
      # so that it's not copied and made accessible in the Sampler Module.
      $PlasterTemplateFolder = Get-Item ./output/Sampler/*/PlasterTemplate
      $ToCopy = gci . -Exclude .git,output
      foreach ($item in $toCopy) {
        Copy-Item -recurse -Force -Path $item -Destination (Join-Path $PlasterTemplateFolder $item.Name)
      }
    }

  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - Clean
    - Set_Build_Environment_Variables
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - CopyPlaster
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold

Resolve-Dependency: #Parameters for Resolve-Dependency
  #PSDependTarget: ./output/modules
  #Proxy: ''
  #ProxyCredential:
  Gallery: 'PSGallery'
  # AllowOldPowerShellGetModule: true
  #MinimumPSDependVersion = '0.3.0'
  AllowPrerelease: false
  Verbose: false

ModuleBuildTasks:
#   # - ModuleName: 'alias to search'
#   - Sampler: *.ib.tasks' # this means: import (dot source) all aliases ending with .ib.tasks exported by sampler module

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""
